The system is: Linux - 2.6.27-rc6 - Intel(R) Pentium(R) Dual  CPU  T2370  @ 1.73GHz
Determining if the C compiler is GNU succeeded with the following output:
# 1 "/usr/share/cmake-2.4/Modules/CMakeTestGNU.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "/usr/share/cmake-2.4/Modules/CMakeTestGNU.c"

void THIS_IS_GNU();

Determining if the C++ compiler is GNU succeeded with the following output:
# 1 "/usr/share/cmake-2.4/Modules/CMakeTestGNU.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "/usr/share/cmake-2.4/Modules/CMakeTestGNU.c"

void THIS_IS_GNU();

Determining if the C compiler works passed with the following output:
/usr/bin/gmake -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
gmake[1]: Entering directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/testCCompiler.o
/usr/bin/gcc   -o CMakeFiles/cmTryCompileExec.dir/testCCompiler.o   -c /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -P CMakeFiles/cmTryCompileExec.dir/cmake_clean_target.cmake
/usr/bin/gcc        -fPIC "CMakeFiles/cmTryCompileExec.dir/testCCompiler.o"   -o cmTryCompileExec -rdynamic 
gmake[1]: Leaving directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'


Determining size of void* passed with the following output:
/usr/bin/gmake -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
gmake[1]: Entering directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckTypeSize.o
/usr/bin/gcc   -o CMakeFiles/cmTryCompileExec.dir/CheckTypeSize.o   -c /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CheckTypeSize.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -P CMakeFiles/cmTryCompileExec.dir/cmake_clean_target.cmake
/usr/bin/gcc        -fPIC "CMakeFiles/cmTryCompileExec.dir/CheckTypeSize.o"   -o cmTryCompileExec -rdynamic 
gmake[1]: Leaving directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'


Determining if the CXX compiler works passed with the following output:
/usr/bin/gmake -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
gmake[1]: Entering directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.o
/usr/bin/c++    -o CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.o -c /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTryCompileExec
/usr/bin/cmake -P CMakeFiles/cmTryCompileExec.dir/cmake_clean_target.cmake
/usr/bin/c++         -fPIC "CMakeFiles/cmTryCompileExec.dir/testCXXCompiler.o"   -o cmTryCompileExec -rdynamic 
gmake[1]: Leaving directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'


Determining if the Q_WS_X11 exist passed with the following output:
/usr/bin/gmake -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
gmake[1]: Entering directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o
/usr/bin/gcc  -I/usr/lib/qt-4.4.1/include   -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o   -c /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -P CMakeFiles/cmTryCompileExec.dir/cmake_clean_target.cmake
/usr/bin/gcc        -fPIC "CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o"   -o cmTryCompileExec -rdynamic 
gmake[1]: Leaving directory `/proyect/rxwebcam_beta/CMakeFiles/CMakeTmp'

File /proyect/rxwebcam_beta/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_X11
  cmakeRequireSymbol(0,&Q_WS_X11);
#endif
  return 0;
}

